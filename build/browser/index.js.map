{"version":3,"file":"index.js","sources":["../module/lib/neural-net.js","../module/lib/NetFileManager.js","../module/lib/Logger.js"],"sourcesContent":["var NeuralNet = (function () {\r\n    /**\r\n     * Creates a NeuralNet which has a JSON representation\r\n     * @param net\r\n     */\r\n    function NeuralNet(net) {\r\n        this.prePreppedNet = net;\r\n        this.preppedNet = this.prepJSON(this.prePreppedNet);\r\n        this.JSON = JSON.stringify(this.preppedNet);\r\n    }\r\n    /**\r\n     * Changes the prePreppedNet and then update the PreppedNet and the JSON\r\n     * @param optionalNet Object which contains what you want to change about the prePreppedNet\r\n     */\r\n    NeuralNet.prototype.adjustNet = function (optionalNet) {\r\n        var weights = optionalNet.weights;\r\n        var tVals = optionalNet.targetValues;\r\n        var inputs = optionalNet.inputLayer;\r\n        var hiddenLayers = optionalNet.hiddenLayers;\r\n        if (weights) {\r\n            this.prePreppedNet.weights = weights;\r\n        }\r\n        if (tVals) {\r\n            this.prePreppedNet.targetValues = tVals;\r\n        }\r\n        if (inputs) {\r\n            this.prePreppedNet.inputLayer = inputs;\r\n        }\r\n        if (hiddenLayers) {\r\n            this.prePreppedNet.hiddenLayers = hiddenLayers;\r\n        }\r\n        this.update();\r\n    };\r\n    /**\r\n     * Updates the preppedNet and JSON using the current prePreppedNet\r\n     */\r\n    NeuralNet.prototype.update = function () {\r\n        this.preppedNet = this.prepJSON(this.prePreppedNet);\r\n        this.JSON = JSON.stringify(this.preppedNet);\r\n    };\r\n    NeuralNet.prototype.dealHidden = function (layers) {\r\n        var tensors = [];\r\n        for (var _i = 0, layers_1 = layers; _i < layers_1.length; _i++) {\r\n            var layer = layers_1[_i];\r\n            var size = [layer.rows, layer.cols];\r\n            var elements = layer.elements;\r\n            tensors.push({ size: size, elements: elements });\r\n        }\r\n        return tensors;\r\n    };\r\n    NeuralNet.prototype.dealWeights = function (weights) {\r\n        var size = [weights.rows, weights.cols];\r\n        var elements = weights.elements;\r\n        return { size: size, elements: elements };\r\n    };\r\n    NeuralNet.prototype.dealTVal = function (tvals) {\r\n        var size = [tvals.rows, tvals.cols];\r\n        var elements = tvals.elements;\r\n        return { size: size, elements: elements };\r\n    };\r\n    NeuralNet.prototype.dealInput = function (input) {\r\n        var size = [input.rows, input.cols];\r\n        var elements = input.elements;\r\n        return { size: size, elements: elements };\r\n    };\r\n    /**\r\n     * Change the prepreppednet to a JSON-stringify compatible format\r\n     * @param net\r\n     */\r\n    NeuralNet.prototype.prepJSON = function (net) {\r\n        var weightsJSON = this.dealWeights(net.weights);\r\n        var targetValuesJSON = this.dealTVal(net.targetValues);\r\n        var inputLayerJSON = this.dealInput(net.inputLayer);\r\n        var hiddenLayersJSON = this.dealHidden(net.hiddenLayers);\r\n        var weights = weightsJSON;\r\n        var targets = targetValuesJSON;\r\n        var inputs = inputLayerJSON;\r\n        var hiddenLayers = hiddenLayersJSON;\r\n        return {\r\n            weights: weights,\r\n            targets: targets,\r\n            inputs: inputs,\r\n            hiddenLayers: hiddenLayers\r\n        };\r\n    };\r\n    return NeuralNet;\r\n}());\r\nexport { NeuralNet };\r\n","import * as fs from 'fs';\r\nimport { ManagerLogger } from './Logger';\r\nvar NetFileManager = (function () {\r\n    /**\r\n     * Upon contstruction the net is saved\r\n     * @param net;\r\n     */\r\n    function NetFileManager(net) {\r\n        this.net = net;\r\n        this.logger = new ManagerLogger(this.net);\r\n        this.save();\r\n    }\r\n    NetFileManager.prototype.save = function () {\r\n        var _this = this;\r\n        this.logger.log(\"Net was just saved: \" + this.logger.timesSaved);\r\n        fs.exists(\"NetJSON/net.json\", (function (exists) {\r\n            if (exists) {\r\n                fs.unlink(\"NetJSON/net.json\", function (err) {\r\n                    if (err) {\r\n                        throw err;\r\n                    }\r\n                    else {\r\n                        console.log(\"File exists, deleting and rewriting\");\r\n                        fs.writeFile(\"NetJSON/net.json\", _this.net.JSON, function (err) {\r\n                            if (err) {\r\n                                throw err;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                console.log(\"File doesn't exist, writing\");\r\n                fs.writeFile(\"NetJSON/net.json\", _this.net.JSON, function (err) {\r\n                    if (err) {\r\n                        throw err;\r\n                    }\r\n                });\r\n            }\r\n        }));\r\n    };\r\n    return NetFileManager;\r\n}());\r\nexport { NetFileManager };\r\n","import * as fs from 'fs';\r\nvar Logger = (function () {\r\n    function Logger() {\r\n        var thisa = this;\r\n        setInterval(function () {\r\n            thisa.log(\"\");\r\n        }, 3000);\r\n    }\r\n    Logger.prototype.log = function (logMessage) {\r\n        fs.writeFile('log.txt', \"LOGGING\\n\", function (err) {\r\n            if (err) {\r\n                throw err;\r\n            }\r\n        });\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\nvar ManagerLogger = (function () {\r\n    function ManagerLogger(net) {\r\n        this.timesSaved = 1;\r\n        this.net = net;\r\n    }\r\n    ManagerLogger.prototype.log = function (logMessage) {\r\n        this.timesSaved++;\r\n        fs.appendFile('logs/log.txt', logMessage + \"\\n\", function (err) {\r\n            if (err) {\r\n                throw err;\r\n            }\r\n        });\r\n    };\r\n    return ManagerLogger;\r\n}());\r\nexport { ManagerLogger };\r\n"],"names":["fs.writeFile","fs.unlink","exists","fs.exists","fs.appendFile"],"mappings":";;;;;;AEkBA,IAAI,aAAa,IAAI,YAAY;IAC7B,SAAS,aAAa,CAAC,GAAG,EAAE;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAClB;IACD,aAAa,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,UAAU,EAAE;QAChD,IAAI,CAAC,UAAU,EAAE,CAAC;QAClBI,aAAa,CAAC,cAAc,EAAE,UAAU,GAAG,IAAI,EAAE,UAAU,GAAG,EAAE;YAC5D,IAAI,GAAG,EAAE;gBACL,MAAM,GAAG,CAAC;aACb;SACJ,CAAC,CAAC;KACN,CAAC;IACF,OAAO,aAAa,CAAC;CACxB,EAAE,CAAC;;AD9BJ,IAAI,cAAc,IAAI,YAAY;;;;;IAK9B,SAAS,cAAc,CAAC,GAAG,EAAE;QACzB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;IACD,cAAc,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;QACxC,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACjED,SAAS,CAAC,kBAAkB,GAAG,UAAUD,SAAM,EAAE;YAC7C,IAAIA,SAAM,EAAE;gBACRD,SAAS,CAAC,kBAAkB,EAAE,UAAU,GAAG,EAAE;oBACzC,IAAI,GAAG,EAAE;wBACL,MAAM,GAAG,CAAC;qBACb;yBACI;wBACD,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;wBACnDD,YAAY,CAAC,kBAAkB,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE;4BAC5D,IAAI,GAAG,EAAE;gCACL,MAAM,GAAG,CAAC;6BACb;yBACJ,CAAC,CAAC;qBACN;iBACJ,CAAC,CAAC;aACN;iBACI;gBACD,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;gBAC3CA,YAAY,CAAC,kBAAkB,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE;oBAC5D,IAAI,GAAG,EAAE;wBACL,MAAM,GAAG,CAAC;qBACb;iBACJ,CAAC,CAAC;aACN;SACJ,EAAE,CAAC;KACP,CAAC;IACF,OAAO,cAAc,CAAC;CACzB,EAAE,CAAC;;AD1CJ,IAAI,SAAS,IAAI,YAAY;;;;;IAKzB,SAAS,SAAS,CAAC,GAAG,EAAE;QACpB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC/C;;;;;IAKD,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,WAAW,EAAE;QACnD,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;QAClC,IAAI,KAAK,GAAG,WAAW,CAAC,YAAY,CAAC;QACrC,IAAI,MAAM,GAAG,WAAW,CAAC,UAAU,CAAC;QACpC,IAAI,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QAC5C,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;SACxC;QACD,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3C;QACD,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,MAAM,CAAC;SAC1C;QACD,IAAI,YAAY,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;SAClD;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;KACjB,CAAC;;;;IAIF,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC/C,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,MAAM,EAAE;QAC/C,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;YAC5D,IAAI,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;YACzB,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;YACpC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAC9B,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;SACpD;QACD,OAAO,OAAO,CAAC;KAClB,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,OAAO,EAAE;QACjD,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAChC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;KAC7C,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK,EAAE;QAC5C,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;KAC7C,CAAC;IACF,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,KAAK,EAAE;QAC7C,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;KAC7C,CAAC;;;;;IAKF,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE;QAC1C,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACvD,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACpD,IAAI,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACzD,IAAI,OAAO,GAAG,WAAW,CAAC;QAC1B,IAAI,OAAO,GAAG,gBAAgB,CAAC;QAC/B,IAAI,MAAM,GAAG,cAAc,CAAC;QAC5B,IAAI,YAAY,GAAG,gBAAgB,CAAC;QACpC,OAAO;YACH,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,MAAM,EAAE,MAAM;YACd,YAAY,EAAE,YAAY;SAC7B,CAAC;KACL,CAAC;IACF,OAAO,SAAS,CAAC;CACpB,EAAE,CAAC;;;;;;;;;;;;;;"}